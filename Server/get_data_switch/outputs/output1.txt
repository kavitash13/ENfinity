2022-07-18T12:37:20: %EASYPY-INFO: Starting job run: sample2
2022-07-18T12:37:20: %EASYPY-INFO: Runinfo directory: /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/runinfo/sample2.2022Jul18_12:37:19.611025
2022-07-18T12:37:20: %EASYPY-INFO: --------------------------------------------------------------------------------
2022-07-18T12:37:23: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:23: %EASYPY-INFO: |                              Clean Information                               |
2022-07-18T12:37:23: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:23: %EASYPY-INFO: {'bringup': {}, 'cleaners': {}, 'devices': {}}

2022-07-18T12:37:23: %ATS-INFO: Checking all devices are up and ready is disabled, '--check-all-devices-up' must be set to True in case of pyats runs or '-check_all_devices_up' set to True in case of legacy easypy runs
2022-07-18T12:37:23: %EASYPY-INFO: Starting task execution: Task-1
2022-07-18T12:37:23: %EASYPY-INFO:     test harness = pyats.aetest
2022-07-18T12:37:23: %EASYPY-INFO:     testscript   = /users/gurpres5/sample2.py
2022-07-18T12:37:24: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:24: %AETEST-INFO: |                            Starting common setup                             |
2022-07-18T12:37:24: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:24: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:24: %AETEST-INFO: |                         Starting subsection connect                          |
2022-07-18T12:37:24: %AETEST-INFO: +------------------------------------------------------------------------------+

2022-07-18 12:37:24,018: %UNICON-INFO: +++ Metaluna logfile /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/runinfo/sample2.2022Jul18_12:37:19.611025/Metaluna-cli-1658128044.log +++

2022-07-18 12:37:24,019: %UNICON-INFO: +++ Unicon plugin iosxe +++
2022-07-18T12:37:24: %WARNINGS-WARNING: [33m/ws/srmk-bgl/pyats/pyats_20_5/lib/python3.8/site-packages/unicon/bases/routers/connection.py:97:[0m[39m
2022-07-18T12:37:24: %WARNINGS-WARNING: [33mDeprecationWarning: Arguments 'username', 'enable_password','tacacs_password' and 'line_password' are now deprecated and replaced by 'credentials'.[0m[39m
2022-07-18T12:37:24: %WARNINGS-WARNING: [33m  warnings.warn(message = "Arguments 'username', "[0m[39m
Trying 10.106.19.196...


2022-07-18 12:37:24,034: %UNICON-INFO: +++ connection to spawn: telnet 10.106.19.196 2004, id: 140366426694608 +++

2022-07-18 12:37:24,034: %UNICON-INFO: connection to Metaluna
Connected to 10.106.19.196.
Escape character is '^]'.

Switch#

2022-07-18 12:37:24,865: %UNICON-WARNING: Invalid hostname detected: found Switch, expected Metaluna

2022-07-18 12:37:24,866: %UNICON-INFO: +++ initializing handle +++

2022-07-18 12:37:24,932: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'term length 0' +++
term length 0
Switch#

2022-07-18 12:37:25,162: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'term width 0' +++
term width 0
Switch#

2022-07-18 12:37:25,392: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show version' +++
show version
Cisco IOS XE Software, Version 2022-07-18_08.29_kavelmur
Cisco IOS Software [Dublin], Catalyst L3 Switch Software (CAT9K_IOSXE), Experimental Version 17.10.20220714:183343 [BLD_POLARIS_DEV_S2C_20220701_023637-4-g92ae75815d4e-dirty:/nobackup/kavelmur/histogram 104]
Copyright (c) 1986-2022 by Cisco Systems, Inc.
Compiled Fri 15-Jul-22 00:03 by kavelmur


Cisco IOS-XE software, Copyright (c) 2005-2022 by cisco Systems, Inc.
All rights reserved.  Certain components of Cisco IOS-XE software are
licensed under the GNU General Public License ("GPL") Version 2.0.  The
software code licensed under GPL Version 2.0 is free software that comes
with ABSOLUTELY NO WARRANTY.  You can redistribute and/or modify such
GPL code under the terms of GPL Version 2.0.  For more details, see the
documentation or "License Notice" file accompanying the IOS-XE software,
or the applicable URL provided on the flyer accompanying the IOS-XE
software.


ROM: IOS-XE ROMMON
BOOTLDR: System Bootstrap, Version 17.7.1DEV, DEVELOPMENT SOFTWARE
Switch uptime is 3 hours, 47 minutes
Uptime for this control processor is 3 hours, 51 minutes
System returned to ROM by reload command issued
System image file is "tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin"
Last reload reason: reload command issued



This product contains cryptographic features and is subject to United
States and local country laws governing import, export, transfer and
use. Delivery of Cisco cryptographic products does not imply
third-party authority to import, export, distribute or use encryption.
Importers, exporters, distributors and users are responsible for
compliance with U.S. and local country laws. By using this product you
agree to comply with applicable laws and regulations. If you are unable
to comply with U.S. and local laws, return this product immediately.

A summary of U.S. laws governing Cisco cryptographic products may be found at:
http://www.cisco.com/wwl/export/crypto/tool/stqrg.html

If you require further assistance please contact us by sending email to
export@cisco.com.


Technology Package License Information: 

------------------------------------------------------------------------------
Technology-package                                     Technology-package
Current                        Type                       Next reboot  
------------------------------------------------------------------------------
network-essentials  	Smart License                 	 network-essentials  
None                	Subscription Smart License    	 None                          
AIR License Level: AIR DNA Advantage
Next reload AIR license Level: AIR DNA Advantage


Smart Licensing Status: Smart Licensing Using Policy

cisco C9606R (X86) processor (revision V00) with 6030377K/6147K bytes of memory.
Processor board ID FXS2241Q04W
2 Virtual Ethernet interface
60 Forty/Hundred Gigabit Ethernet interfaces
80 Ten/TwentyFive/Fifty Gigabit Ethernet interfaces
4 Forty/Hundred/TwoHundred Gigabit Ethernet interfaces
8 Forty/Hundred/FourHundred Gigabit Ethernet interfaces
32768K bytes of non-volatile configuration memory.
33554432K bytes of physical memory.
11161600K bytes of Bootflash at bootflash:.
1638400K bytes of Crash Files at crashinfo:.
234430023K bytes of SATA hard disk at disk0:.

Base Ethernet MAC Address          : 6c:b2:ae:4a:4f:c0
Motherboard Assembly Number        : 4DB9
Motherboard Serial Number          : FXS223805XS
Model Revision Number              : V02
Motherboard Revision Number        : 6
Model Number                       : C9606R
System Serial Number               : FXS2241Q04W

Switch#

2022-07-18 12:37:29,409: %UNICON-INFO: +++ Metaluna with via 'a': configure +++
config term
Enter configuration commands, one per line.  End with CNTL/Z.
Switch(config)#no logging console
Switch(config)#line console 0
Switch(config-line)#exec-timeout 0
Switch(config-line)#end
Switch#
Device Metaluna, type router
<class 'genie.libs.conf.device.iosxe.device.Device'>
Help on Device in module genie.libs.conf.device.iosxe.device object:

class Device(genie.libs.conf.device.cisco.device.Device)
 |  Device(*args, **kwargs)
 |  
 |  Device class for devices with iosxe OS
 |  
 |  Method resolution order:
 |      Device
 |      genie.libs.conf.device.cisco.device.Device
 |      genie.libs.conf.device.Device
 |      genie.conf.base.device.Device
 |      pyats.topology.device.Device
 |      pyats.topology.bases.TopologyObject
 |      pyats.topology.device.DeviceBase
 |      genie.conf.base.base.ConfigurableBase
 |      genie.conf.base.base.Base
 |      genie.base.Base
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, *args, **kwargs)
 |      Base initialization for all Device subclasses.
 |      
 |      This is not an abstract class since it may be used to instantiate
 |      generic unsupported devices.
 |  
 |  build_config(self, apply=True, attributes=None)
 |      method to build the configuration of the device
 |      
 |      Api to build the configuration of a device object. This configuration
 |      depends of the configurable attributes of this object.
 |      
 |      Args:
 |          apply (`bool`): Apply the configuration on the device, unless
 |                          it is set to False, then return the configuration,
 |                          without applying it.
 |      Return:
 |          None if it was applied on the device
 |      
 |          `str` if apply was set to False
 |      
 |      Examples:
 |          >>> from genie.base.device import Device
 |      
 |          Create a Device obj
 |      
 |          >>> device = Device(name='PE1')
 |      
 |          assign configurable attributes to device obj
 |      
 |          >>> device.username = 'lab'
 |          >>> device.password = 'lab'
 |      
 |          build configuration and apply it on the device
 |      
 |          >>> device.build_config()
 |      
 |          build configuration and only return it
 |      
 |          >>> configuration = device.build_config(apply=False)
 |  
 |  build_unconfig(self, apply=True, attributes=None, **kwargs)
 |      method to build the unconfiguration of the device object
 |      
 |      Api to build the unconfiguration of a device object. This
 |      unconfiguration depends of the configurable attributes of this object.
 |      
 |      Args:
 |          apply (`bool`): Apply the configuration on the device, unless
 |                          it is set to False, then return the configuration,
 |                          without applying it.
 |      Return:
 |          None if it was applied on the device
 |      
 |          `str` if apply was set to False
 |      
 |      Examples:
 |          >>> from genie.base.device import Device
 |      
 |          Create a Device obj
 |      
 |          >>> device = Device(name='PE1')
 |      
 |          build configuration and apply it on the device
 |      
 |          >>> device.build_unconfig()
 |      
 |          build configuration and only return it
 |      
 |          >>> configuration = device.build_unconfig(apply=False)
 |  
 |  learn_interface_mac_addresses(self)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from genie.libs.conf.device.Device:
 |  
 |  clean_interface_name(self, interface_name)
 |  
 |  get_os_specific_Interface_class(self)
 |  
 |  short_interface_name(self, interface_name)
 |  
 |  ----------------------------------------------------------------------
 |  Static methods inherited from genie.libs.conf.device.Device:
 |  
 |  __new__(cls, name, *args, **kwargs)
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from genie.libs.conf.device.Device:
 |  
 |  custom_config_cli
 |  
 |  custom_unconfig_cli
 |  
 |  nodename
 |      Hostname of the device
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from genie.conf.base.device.Device:
 |  
 |  __eq__(self, other)
 |      Implement `self == other`.
 |      
 |      Two Device instances are considered equal if they have the same `name`
 |      and belong to the same `testbed`.
 |  
 |  __ge__(self, other, NotImplemented=NotImplemented)
 |      Return a >= b.  Computed by @total_ordering from (not a < b).
 |  
 |  __gt__(self, other, NotImplemented=NotImplemented)
 |      Return a > b.  Computed by @total_ordering from (not a < b) and (a != b).
 |  
 |  __hash__(self)
 |      Return hash(self).
 |  
 |  __le__(self, other, NotImplemented=NotImplemented)
 |      Return a <= b.  Computed by @total_ordering from (a < b) or (a == b).
 |  
 |  __lt__(self, other)
 |      Implement `self < other`.
 |  
 |  add_feature(self, feature)
 |      method to add a feature to this device
 |      
 |      API to add a `Feature` obj to current `Device` obj.
 |      
 |      Args:
 |          feature (`Feature`): feature object
 |      
 |      Returns:
 |          `None`
 |      
 |      Examples:
 |          Create a Feature obj
 |      
 |          >>> feature = myFeature()
 |      
 |          add the feature into this device
 |      
 |          >>> device.add_feature(feature=feature)
 |  
 |  find_features(self, *rs, iterable=None, count=None, cls=<class 'genie.conf.base.base.DeviceFeature'>, **kwargs)
 |      Find feature objects from device object or from a provided iterable
 |      
 |      API to get `Feature` obj(s) from current `Device` obj or provided
 |      iterable.
 |      
 |      The features can also filtered down with specific keyword arguments.
 |      Those keyword argument must match the attribute and the value. The
 |      value can either be a callable or a specific value. One common use
 |      case of callable is pyATS Logic testing, which gives you Or/And/Not
 |      functionality. Many requirement can be given, and only features
 |      matching all requirements will be returned. Requirements are provided
 |      via the R class if more than one is wanted.
 |      
 |      Filtering on attributes of Feature object is also possible with
 |      a special syntax:
 |      
 |          Look for an feature that has attribute1 and
 |          has attributes 2 that is equal to value
 |      
 |          <attributes1>__<attributes2> = <value>
 |      
 |      This can be chained as much as wanted
 |      
 |      `pyATS logic testing <http://wwwin-pyats.cisco.com/documentation/html/datastructures/logic.html#logic-tests>`_
 |      
 |      If no kwargs is given, then all the `Feature` objs within this device
 |      are returned
 |      
 |      Returns
 |      -------
 |          `list`: a `list` of `Feature` objects, or empty list if nothing
 |           matches
 |      
 |      Parameters
 |      ----------
 |      rs : ``*args``
 |          Positional argument of requirements to find particular object
 |      
 |      iterable : `list`
 |          Iterable of features. If it is provided, then it will find
 |          within this iterable. If it is not provided, then it will use
 |          the device features list.
 |      
 |      count : `int`
 |          Quantity of features will be returned, by default
 |          it returns all
 |      
 |      kwargs : `dict`
 |          Gives the user ability to fine tune the API to return only
 |          filtered objects. It can be done via callable,
 |          or specific value
 |  
 |  find_interfaces(self, *rs, iterable=None, count=None, cls=<class 'genie.conf.base.interface.BaseInterface'>, obj_state='active', **kwargs)
 |      Find interface objects from device object or from a provided
 |      iterable
 |      
 |      API to get `Interface` obj(s) from current `Device` obj or provided
 |      iterable.
 |      
 |      The interfaces can also filtered down with specific keyword arguments.
 |      Those keyword argument must match the attribute and the value. The
 |      value can either be a callable or a specific value. One common use
 |      case of callable is pyATS Logic testing, which gives you Or/And/Not
 |      functionality. Many requirement can be given, and only interfaces
 |      matching all requirements will be returned. Requirements are provided
 |      via the R class if more than one is wanted.
 |      
 |      Filtering on attributes of Interface object is also possible with
 |      a special syntax:
 |      
 |          Look for an interface that has attribute1 and
 |          has attributes 2 that is equal to value
 |      
 |          <attributes1>__<attributes2> = <value>
 |      
 |      This can be chained as much as wanted
 |      
 |      `pyATS logic testing <http://wwwin-pyats.cisco.com/documentation/html/datastructures/logic.html#logic-tests>`_
 |      
 |      If no kwargs is given, then all the `Interface` objs within this device
 |      are returned if their `obj_state` match with the requires state, which
 |      is active by default.
 |      
 |      Returns
 |      -------
 |          `list`: a `list` of `Interface` objects, or empty list if nothing
 |           matches
 |      
 |      Parameters
 |      ----------
 |      rs : ``*args``
 |          Positional argument of requirements to find particular object
 |      
 |      iterable : `list`
 |          Iterable of interfaces. If it is provided, then it will find
 |          within this iterable. If it is not provided, then it will use
 |          the device interfaces list.
 |      
 |      count : `int`
 |          Quantity of interfaces will be returned, by default
 |          it returns all
 |      
 |      obj_state : 'Callable' or 'value'
 |          State of the objects wanted, can be specified as a callable,
 |          or a specific value
 |      
 |      kwargs : `dict`
 |          Gives the user ability to fine tune the API to return only
 |          filtered objects. It can be done via callable,
 |          or specific value
 |      
 |      Examples
 |      --------
 |          Create a Testbed obj from yaml file:
 |      
 |          ::
 |      
 |              >>> from genie.conf import Genie
 |              >>> from genie.conf.base.utils import R
 |      
 |          Get all interface objects under this device:
 |      
 |          ::
 |      
 |              >>> device.find_interfaces()
 |              [<genie.Genie.base.interface.EthernetInterface object at 0xf6b5ae8c>,
 |              <genie.Genie.base.interface.EthernetInterface object at 0xf6b5ac6c>,
 |              <genie.Genie.base.interface.EthernetInterface object at 0xf6b5ad8c>,
 |              <genie.Genie.base.interface.EthernetInterface object at 0xf6b5aecc>,
 |              <genie.Genie.base.interface.EthernetInterface object at 0xf6b5a12c>,
 |              <genie.Genie.base.interface.EthernetInterface object at 0xf6b5a9ac>]
 |      
 |          Get 2 interface objects:
 |      
 |          ::
 |      
 |              >>> device.find_interfaces(count=2)
 |              [<genie.Genie.base.interface.EthernetInterface object at 0xf6b5a12c>,
 |              <genie.Genie.base.interface.EthernetInterface object at 0xf6b5a9ac>]
 |      
 |          Get all interface objects which has name 'ethernet4/1' filtered
 |          with the specific value:
 |      
 |          ::
 |      
 |              >>> device.find_interfaces(name='ethernet4/1')
 |      
 |          Get a list of devices objects which are not named PE1, filtered
 |          with pyATS logic callable:
 |      
 |          ::
 |      
 |              >>> device = Genie.find_devices(name=Not('^PE1$'))
 |              [<genie.Genie.base.interface.EthernetInterface object at 0xf6b5a9ac>]
 |      
 |          Iterable provided, so will find within this list, filtered with
 |          pyATS logic callable:
 |      
 |          ::
 |      
 |              >>> interfaces = [
 |               <genie.Genie.base.interface.EthernetInterface object at 0xf6b5a12c>,
 |               <genie.Genie.base.interface.EthernetInterface object at 0xf6b5a9ac>]
 |      
 |              >>> device.find_interfaces(iterable=interfaces,
 |                                         name=Or('ethernet4/1'))
 |      
 |          Get all the interfaces of type ethernet that have speed 1000:
 |      
 |          ::
 |      
 |              >>> device.find_interfaces(type='ethernet', speed=1000)
 |  
 |  learn(self, feature, **kwargs)
 |  
 |  learn_management(self, connection_ip)
 |      method to learn the management interface name on the device.
 |      
 |      It will add the retrieved interface name as an attribute to the device
 |      object.
 |      
 |      Args:
 |          connection_ip (`str`): connection ip address
 |      
 |      Returns:
 |          `None`
 |      
 |      Examples:
 |          >>> device.learn_management(ipaddress)
 |  
 |  parse(self, command, alias='', fuzzy=False, continue_on_failure=False, context='cli', **kwargs)
 |  
 |  remove_feature(self, feature)
 |      method to remove a feature from this device
 |      
 |      API to remove a `Feature` obj from current `Device` obj.
 |      
 |      Args:
 |          feature (`Feature`): feature object
 |      
 |      Returns:
 |          `None`
 |      
 |      Examples:
 |          Create a Feature obj
 |      
 |          >>> feature = myFeature()
 |      
 |          add the feature into this device
 |      
 |          >>> device.add_feature(feature=feature)
 |          >>> ...
 |      
 |          remove the feature from this device
 |      
 |          >>> device.remove_feature(feature=feature)
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from genie.conf.base.device.Device:
 |  
 |  platform
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes inherited from genie.conf.base.device.Device:
 |  
 |  aliases = None
 |  
 |  features = None
 |  
 |  obj_state = 'active'
 |  
 |  roles = None
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from pyats.topology.device.Device:
 |  
 |  __dir__(self)
 |      Device class __dir__ (built-in)
 |      
 |      Chaining this device's dir() return with its connection manager's dir().
 |      This API is an extension of the __getattr__ functionality, so that
 |      when dir(device) is used, everything is shown, instead of only those
 |      attributes native to Device class.
 |      
 |      Arguments
 |      ---------
 |          None
 |      
 |      Returns
 |      -------
 |          List of attributes for this device and its connection manager.
 |  
 |  __getattr__(self, attr)
 |      Device class get attribute (built-in)
 |      
 |      This api is used to redirect device connection manager and/or device
 |      connection object attributes to the device attribute level. This is
 |      designed to faciliate user experience w.r.t. making device connection
 |      calls without having to fully supply the attribute chain
 |      
 |      Note
 |      ----
 |          1. in case both connections object and device object have the same
 |             named attribute, the device object attribute takes precedence
 |          2. by default, if user makes subcommand calls such as device.config,
 |             the subcommand redirection points to the "default" connection.
 |      
 |      Example
 |      -------
 |          >>> assert device.connectionmgr.default.execute == device.execute
 |          True
 |          >>> device.connectionmgr.default.execute('show clock')
 |          'Mon Apr  7 16:13:37 EDT 2014'
 |          >>> device.execute('show clock')
 |          'Mon Apr  7 16:13:37 EDT 2014'
 |      
 |      Arguments
 |      ---------
 |          attr (str): attribute name to get
 |      
 |      Returns
 |      -------
 |          attribute.
 |      
 |      Raises
 |      ------
 |          AttributeError
 |  
 |  __str__(self)
 |      Device class string representation
 |      
 |      Arguments
 |      ---------
 |          self (Device): caller object
 |      
 |      Returns
 |      -------
 |          name of the device and its type
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from pyats.topology.device.Device:
 |  
 |  default_connection_alias
 |      Default alias for device connections
 |      
 |      Returns the current default alias for device connections.
 |  
 |  testbed
 |      Device testbed property getter
 |      
 |      Returns the parent testbed object, or None.
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes inherited from pyats.topology.device.Device:
 |  
 |  CFG_TOPOLOGY_CLASS = 'topology.class.device'
 |  
 |  ENTRY_POINT_NAME = 'device'
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from pyats.topology.bases.TopologyObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from pyats.topology.device.DeviceBase:
 |  
 |  __contains__(self, intf)
 |      Built in __contains__
 |      
 |      Enables testing of whether a device has a particular interface object
 |      by using the in operator. This is equivalent to using the in operator
 |      on device.interfaces attribute.
 |      
 |      Note that since device.interfaces is a dictionary, this api is wired
 |      so that both tests using the interface name, and the interface object
 |      is valid
 |      
 |      Example
 |      -------
 |          >>> intf = Interface('Ethernet1/1')
 |          >>> device = Device('testDevice')
 |          >>> device.add_interface(intf)
 |          >>> assert intf in device
 |          >>> assert intf.name in device
 |  
 |  __iter__(self)
 |      Built in __iter__
 |      
 |      Enables looping over device's interfaces object
 |      
 |      Example
 |      -------
 |          >>> device = Device('testDevice')
 |          >>> intf = Interface('Ethernet1/1')
 |          >>> device.add_interface(intf)
 |          >>> for intf in device:
 |          ...     print(intf)
 |  
 |  __repr__(self)
 |      Device class repr
 |      
 |      Arguments
 |      ---------
 |          self (Device): caller object
 |      
 |      Returns
 |      -------
 |          repr() of device
 |  
 |  add_interface(self, interface)
 |      Adds an interface to this device
 |      
 |      This API adds an interface object to this device object
 |      
 |      Arguments
 |      ---------
 |          interface (Interface): interface object to be added to this device
 |      
 |      Returns
 |      -------
 |          None
 |  
 |  find_links(self, dest)
 |      Find Link
 |      
 |      API to find and return the set of matching links that matches the
 |      criteria destination, which could be either a device object, or an
 |      interface object.
 |      
 |      Example
 |      -------
 |          >>> device_a = Device('a')
 |          >>> device_b = Device('b')
 |          >>> link = Link('commonlink')
 |          >>> device_a.add_interface(Interface('Eth1', 'eth', link=link))
 |          >>> device_b.add_interface(Interface('Eth1', 'eth', link=link))
 |          >>> assert link in device_a.find_links(device_b)
 |          >>> assert link in device_a.find_links(device_b.interfaces['Eth1'])
 |      
 |      Arguments
 |      ---------
 |          dest (obj): destination object, either a device object or an
 |                      interface object
 |      
 |      Returns
 |      -------
 |          set() of links matching the destination
 |  
 |  remove_interface(self, interface)
 |      Removes interface from device
 |      
 |      This API removes the given interface object from device
 |      
 |      Note that this API does not remove the Interface object,
 |      but merely removes it from belonging to this device.
 |      
 |      Arguments
 |      ---------
 |          interface (str/Interface): interface obj or name that is to be
 |                                     removed from device,
 |      
 |      Returns
 |      -------
 |          None
 |  
 |  ----------------------------------------------------------------------
 |  Readonly properties inherited from pyats.topology.device.DeviceBase:
 |  
 |  links
 |      Property: links
 |      
 |      Returns the set of links currently connected to this device, via its
 |      interfaces.
 |  
 |  remote_devices
 |      Property: remote_devices
 |      
 |      Returns the set of remote devices connected to this device, through its
 |      interface links.
 |  
 |  remote_interfaces
 |      Property: remote_interfaces
 |      
 |      Returns the set of remote interfaces connected to this device,
 |      through its interface links.
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes inherited from pyats.topology.device.DeviceBase:
 |  
 |  __testbed__ = None

None
2022-07-18T12:37:30: %AETEST-INFO: The result of subsection connect is => PASSED
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:30: %AETEST-INFO: |                      Starting subsection verify_inputs                       |
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
parse and verify inputs from yaml
2022-07-18T12:37:30: %AETEST-INFO: The result of subsection verify_inputs is => PASSED
2022-07-18T12:37:30: %AETEST-INFO: The result of common setup is => PASSED
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:30: %AETEST-INFO: |                            Starting testcase TC1                             |
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:30: %AETEST-INFO: |                          Starting section tc1_setup                          |
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
Setting up things required for this TC

2022-07-18 12:37:30,090: %UNICON-INFO: Metaluna is already connected
2022-07-18T12:37:30: %AETEST-INFO: The result of section tc1_setup is => PASSED
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:30: %AETEST-INFO: |                          Starting section tc1_step1                          |
2022-07-18T12:37:30: %AETEST-INFO: +------------------------------------------------------------------------------+
unique.................................................................................unique

2022-07-18 12:37:30,218: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show interfaces Fif1/0/17' +++
show interfaces Fif1/0/17
FiftyGigE1/0/17 is up, line protocol is up (connected) 
  Hardware is Fifty Gigabit Ethernet, address is 6c03.090e.db10 (bia 6c03.090e.db10)
  MTU 1500 bytes, BW 10000000 Kbit/sec, DLY 10 usec, 
     reliability 255/255, txload 1/255, rxload 1/255
  Encapsulation ARPA, loopback not set
  Keepalive not set
  Full-duplex, 10Gb/s, link type is auto, media type is SFP-10GBase-CU3M
  input flow-control is off, output flow-control is unsupported 
  ARP type: ARPA, ARP Timeout 04:00:00
  Last input 00:00:01, output 00:00:04, output hang never
  Last clearing of "show interface" counters 03:47:20
  Input queue: 0/2000/0/0 (size/max/drops/flushes); Total output drops: 0
  Queueing strategy: fifo
  Output queue: 0/40 (size/max)
  5 minute input rate 0 bits/sec, 0 packets/sec
  5 minute output rate 0 bits/sec, 0 packets/sec
     8834 packets input, 673016 bytes, 0 no buffer
     Received 0 broadcasts (0 multicasts)
     0 runts, 0 giants, 0 throttles 
     0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored
     0 watchdog, 0 multicast, 0 pause input
     0 input packets with dribble condition detected
     450 packets output, 28800 bytes, 0 underruns
     Output 0 broadcasts (0 multicasts)
     0 output errors, 0 collisions, 2 interface resets
     260 unknown protocol drops
     0 babbles, 0 late collision, 0 deferred
     0 lost carrier, 0 no carrier, 0 pause output
     0 output buffer failures, 0 output buffers swapped out
Switch#

2022-07-18 12:37:31,998: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show platform hardware iomd 2/0 ethernet_controllers phy 2 link-status' +++
show platform hardware iomd 2/0 ethernet_controllers phy 2 link-status
****** Port = 2, Phy_port = 0, Ctrl = 0 *******

Executing Command - [interface] 

Executing Command - [link status] 
PHY:0
 hMdio:1 hLane:1 hCurr:0 hLatch:0 hSigDetect:0 hDspLock:0 h_OpMode:60
 lMdio:1 lLane:1 lCurr:0 lLatch:0 lSigDetect:1 lDspLock:0 l_OpMode:60
 (rc:0)
 line-side AN status: complete 0 speed_bits 0 (rc:0)

Executing Command - [interface link status] 

Executing Command - [channel link status] 

Executing Command - [kran status hrx 0] 
Port optics info : 
Optics Type: SFP 50GE CU3M
Vendor Name: CISCO-LUXSHARE  
PID : SFP-50G-CU3M        ^A

Optics DOM :
Lanes : 1
voltage: 34789.000000
temperature: -120.000000


            |   Rx LOS  |   Tx LOS  |   Rx Power    |   Tx Power    |   Tx Laser Status |   Tx Bias Current |
            |           |           |               |               |                   |                   |
 -----------+-----------+-----------+---------------+---------------+-------------------+-------------------+
    Lane 1  |         0 |         0 |    -12.628074 |    -40.000000 |                 0 |         65.000000 |
Executing Command - [Auxiliary PHY link status] 

Executing Command - [Auxiliary PHY snr] 

Executing Command - [Auxiliary PHY counters] 


Switch#

2022-07-18 12:37:33,640: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show platform hardware iomd 2/0 ethernet_controllers phy 2 pcs-status' +++
show platform hardware iomd 2/0 ethernet_controllers phy 2 pcs-status
****** Port = 2, Phy_port = 0, Ctrl = 0 *******

Executing Command - [fec stat] 
  Port	Mode		mdio	lane 	DIR	Speed	FEC		AN
   2	MZD_P50UP	1	1	LINE	50G	RS-FEC/RS544	OFF

Executing Command - [pcs] 
PHY:0
 hMdio:1 hLane:1 hCurrTxFault:1 hCurrRxFault:0 hLatchTxFault:1 hLatchRxFault:0
 lMdio:1 lLane:1 lCurrTxFault:0 lCurrRxFault:0 lLatchTxFault:1 lLatchRxFault:1
 (rc:0)
Executing Command - [Auxiliary PHY fec stat] 

Executing Command - [Auxiliary PHY pcs] 


Switch#

2022-07-18 12:37:34,441: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show platform hardware iomd 2/0 ethernet_controllers phy 2 diagnostic-registers | i CAP' +++
show platform hardware iomd 2/0 ethernet_controllers phy 2 diagnostic-registers | i CAP
CTLE C112GX4_CTLE_CAP1_SEL: 0x1F
CTLE C112GX4_CTLE_CAP2_SEL: 0xF
CTLE C112GX4_CTLE_CAP1_SEL: 0x6
CTLE C112GX4_CTLE_CAP2_SEL: 0x7
Switch#

2022-07-18 12:37:35,813: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show platform hardware fed active npu slot 2 port 2 dsc_dump | i RX_FW_LOCK' +++
show platform hardware fed active npu slot 2 port 2 dsc_dump | i RX_FW_LOCK
            "RX_FW_LOCK": 1
Switch#

2022-07-18 12:37:38,754: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show platform hardware fed active npu slot 2 port 2 dsc_dump | i TX_FW_LOCK' +++
show platform hardware fed active npu slot 2 port 2 dsc_dump | i TX_FW_LOCK
            "TX_FW_LOCK": 1,
Switch#

2022-07-18 12:37:41,663: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show platform hardware fed active npu slot 2 port 2 dsc_dump | i RX_SIG_DET' +++
show platform hardware fed active npu slot 2 port 2 dsc_dump | i RX_SIG_DET
            "RX_SIG_DET": 1,
Switch#
unique.................................................................................unique
2022-07-18T12:37:44: %AETEST-INFO: The result of section tc1_step1 is => PASSED
2022-07-18T12:37:44: %AETEST-INFO: The result of testcase TC1 is => PASSED
2022-07-18T12:37:44: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:44: %AETEST-INFO: |                           Starting common cleanup                            |
2022-07-18T12:37:44: %AETEST-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:44: %AETEST-INFO: The result of common cleanup is => PASSED
2022-07-18T12:37:44: %CISCO-INFO: Start Telemetry - Task
2022-07-18T12:37:45: %EASYPY-INFO: TIMS result uploading is not enabled
2022-07-18T12:37:45: %CISCO-INFO: Start Telemetry - Test
2022-07-18T12:37:47: %CISCO-INFO: Posted data to Kafka returning status code 200 within time 0:00:01.030616
2022-07-18T12:37:47: %GENIE-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:47: %GENIE-INFO: |                    Starting Device Image MD5 Hash Plugin                     |
2022-07-18T12:37:47: %GENIE-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:37:47: %LOG-INFO: >>>> Begin child log /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/runinfo/sample2.2022Jul18_12:37:19.611025/JobLog.sample2:pid-610535

2022-07-18 12:37:47,317: %UNICON-INFO: +++ Metaluna logfile /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/runinfo/sample2.2022Jul18_12:37:19.611025/Metaluna-cli-1658128067.log +++

2022-07-18 12:37:47,317: %UNICON-INFO: +++ Unicon plugin iosxe +++
2022-07-18T12:37:47: %WARNINGS-WARNING: [33m/ws/srmk-bgl/pyats/pyats_20_5/lib/python3.8/site-packages/unicon/bases/routers/connection.py:97:[0m[39m
2022-07-18T12:37:47: %WARNINGS-WARNING: [33mDeprecationWarning: Arguments 'username', 'enable_password','tacacs_password' and 'line_password' are now deprecated and replaced by 'credentials'.[0m[39m
2022-07-18T12:37:47: %WARNINGS-WARNING: [33m  warnings.warn(message = "Arguments 'username', "[0m[39m
Trying 10.106.19.196...
Connected to 10.106.19.196.
Escape character is '^]'.


2022-07-18 12:37:47,346: %UNICON-INFO: +++ connection to spawn: telnet 10.106.19.196 2004, id: 140366427363792 +++

2022-07-18 12:37:47,346: %UNICON-INFO: connection to Metaluna

Switch#

2022-07-18 12:37:48,195: %UNICON-WARNING: Invalid hostname detected: found Switch, expected Metaluna

2022-07-18 12:37:48,195: %UNICON-INFO: +++ initializing handle +++

2022-07-18 12:37:48,260: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'term length 0' +++
term length 0
Switch#

2022-07-18 12:37:48,492: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'term width 0' +++
term width 0
Switch#

2022-07-18 12:37:48,725: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show version' +++
show version
Cisco IOS XE Software, Version 2022-07-18_08.29_kavelmur
Cisco IOS Software [Dublin], Catalyst L3 Switch Software (CAT9K_IOSXE), Experimental Version 17.10.20220714:183343 [BLD_POLARIS_DEV_S2C_20220701_023637-4-g92ae75815d4e-dirty:/nobackup/kavelmur/histogram 104]
Copyright (c) 1986-2022 by Cisco Systems, Inc.
Compiled Fri 15-Jul-22 00:03 by kavelmur


Cisco IOS-XE software, Copyright (c) 2005-2022 by cisco Systems, Inc.
All rights reserved.  Certain components of Cisco IOS-XE software are
licensed under the GNU General Public License ("GPL") Version 2.0.  The
software code licensed under GPL Version 2.0 is free software that comes
with ABSOLUTELY NO WARRANTY.  You can redistribute and/or modify such
GPL code under the terms of GPL Version 2.0.  For more details, see the
documentation or "License Notice" file accompanying the IOS-XE software,
or the applicable URL provided on the flyer accompanying the IOS-XE
software.


ROM: IOS-XE ROMMON
BOOTLDR: System Bootstrap, Version 17.7.1DEV, DEVELOPMENT SOFTWARE
Switch uptime is 3 hours, 47 minutes
Uptime for this control processor is 3 hours, 51 minutes
System returned to ROM by reload command issued
System image file is "tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin"
Last reload reason: reload command issued



This product contains cryptographic features and is subject to United
States and local country laws governing import, export, transfer and
use. Delivery of Cisco cryptographic products does not imply
third-party authority to import, export, distribute or use encryption.
Importers, exporters, distributors and users are responsible for
compliance with U.S. and local country laws. By using this product you
agree to comply with applicable laws and regulations. If you are unable
to comply with U.S. and local laws, return this product immediately.

A summary of U.S. laws governing Cisco cryptographic products may be found at:
http://www.cisco.com/wwl/export/crypto/tool/stqrg.html

If you require further assistance please contact us by sending email to
export@cisco.com.


Technology Package License Information: 

------------------------------------------------------------------------------
Technology-package                                     Technology-package
Current                        Type                       Next reboot  
------------------------------------------------------------------------------
network-essentials  	Smart License                 	 network-essentials  
None                	Subscription Smart License    	 None                          
AIR License Level: AIR DNA Advantage
Next reload AIR license Level: AIR DNA Advantage


Smart Licensing Status: Smart Licensing Using Policy

cisco C9606R (X86) processor (revision V00) with 6030377K/6147K bytes of memory.
Processor board ID FXS2241Q04W
2 Virtual Ethernet interface
60 Forty/Hundred Gigabit Ethernet interfaces
80 Ten/TwentyFive/Fifty Gigabit Ethernet interfaces
4 Forty/Hundred/TwoHundred Gigabit Ethernet interfaces
8 Forty/Hundred/FourHundred Gigabit Ethernet interfaces
32768K bytes of non-volatile configuration memory.
33554432K bytes of physical memory.
11161600K bytes of Bootflash at bootflash:.
1638400K bytes of Crash Files at crashinfo:.
234430023K bytes of SATA hard disk at disk0:.

Base Ethernet MAC Address          : 6c:b2:ae:4a:4f:c0
Motherboard Assembly Number        : 4DB9
Motherboard Serial Number          : FXS223805XS
Model Revision Number              : V02
Motherboard Revision Number        : 6
Model Number                       : C9606R
System Serial Number               : FXS2241Q04W

Switch#

2022-07-18 12:37:52,743: %UNICON-INFO: +++ Metaluna with via 'a': configure +++
config term
Enter configuration commands, one per line.  End with CNTL/Z.
Switch(config)#no logging console
Switch(config)#line console 0
Switch(config-line)#exec-timeout 0
Switch(config-line)#end
Switch#

2022-07-18 12:37:56,776: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'show version' +++
show version
Cisco IOS XE Software, Version 2022-07-18_08.29_kavelmur
Cisco IOS Software [Dublin], Catalyst L3 Switch Software (CAT9K_IOSXE), Experimental Version 17.10.20220714:183343 [BLD_POLARIS_DEV_S2C_20220701_023637-4-g92ae75815d4e-dirty:/nobackup/kavelmur/histogram 104]
Copyright (c) 1986-2022 by Cisco Systems, Inc.
Compiled Fri 15-Jul-22 00:03 by kavelmur


Cisco IOS-XE software, Copyright (c) 2005-2022 by cisco Systems, Inc.
All rights reserved.  Certain components of Cisco IOS-XE software are
licensed under the GNU General Public License ("GPL") Version 2.0.  The
software code licensed under GPL Version 2.0 is free software that comes
with ABSOLUTELY NO WARRANTY.  You can redistribute and/or modify such
GPL code under the terms of GPL Version 2.0.  For more details, see the
documentation or "License Notice" file accompanying the IOS-XE software,
or the applicable URL provided on the flyer accompanying the IOS-XE
software.


ROM: IOS-XE ROMMON
BOOTLDR: System Bootstrap, Version 17.7.1DEV, DEVELOPMENT SOFTWARE
Switch uptime is 3 hours, 48 minutes
Uptime for this control processor is 3 hours, 51 minutes
System returned to ROM by reload command issued
System image file is "tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin"
Last reload reason: reload command issued



This product contains cryptographic features and is subject to United
States and local country laws governing import, export, transfer and
use. Delivery of Cisco cryptographic products does not imply
third-party authority to import, export, distribute or use encryption.
Importers, exporters, distributors and users are responsible for
compliance with U.S. and local country laws. By using this product you
agree to comply with applicable laws and regulations. If you are unable
to comply with U.S. and local laws, return this product immediately.

A summary of U.S. laws governing Cisco cryptographic products may be found at:
http://www.cisco.com/wwl/export/crypto/tool/stqrg.html

If you require further assistance please contact us by sending email to
export@cisco.com.


Technology Package License Information: 

------------------------------------------------------------------------------
Technology-package                                     Technology-package
Current                        Type                       Next reboot  
------------------------------------------------------------------------------
network-essentials  	Smart License                 	 network-essentials  
None                	Subscription Smart License    	 None                          
AIR License Level: AIR DNA Advantage
Next reload AIR license Level: AIR DNA Advantage


Smart Licensing Status: Smart Licensing Using Policy

cisco C9606R (X86) processor (revision V00) with 6030377K/6147K bytes of memory.
Processor board ID FXS2241Q04W
2 Virtual Ethernet interface
60 Forty/Hundred Gigabit Ethernet interfaces
80 Ten/TwentyFive/Fifty Gigabit Ethernet interfaces
4 Forty/Hundred/TwoHundred Gigabit Ethernet interfaces
8 Forty/Hundred/FourHundred Gigabit Ethernet interfaces
32768K bytes of non-volatile configuration memory.
33554432K bytes of physical memory.
11161600K bytes of Bootflash at bootflash:.
1638400K bytes of Crash Files at crashinfo:.
234430023K bytes of SATA hard disk at disk0:.

Base Ethernet MAC Address          : 6c:b2:ae:4a:4f:c0
Motherboard Assembly Number        : 4DB9
Motherboard Serial Number          : FXS223805XS
Model Revision Number              : V02
Motherboard Revision Number        : 6
Model Number                       : C9606R
System Serial Number               : FXS2241Q04W

Switch#

2022-07-18 12:38:00,872: %UNICON-INFO: +++ Metaluna with via 'a': executing command 'verify /md5 tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin' +++
verify /md5 tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin
Loading /auto/tftp-blr-users4/kavelmur/new_eye.bin from 202.153.144.25 (via GigabitEthernet
[OK - 1263980084 bytes]
.Done!
verify /md5 (tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin) = b0a0f03e97fc9c1d529666b72f2d0738


Switch#
2022-07-18T12:39:39: %GENIE-INFO: Post-job: Metaluna image: tftp://202.153.144.25//auto/tftp-blr-users4/kavelmur/new_eye.bin hash: b0a0f03e97fc9c1d529666b72f2d0738
2022-07-18T12:39:50: %LOG-INFO: <<<< End child log /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/runinfo/sample2.2022Jul18_12:37:19.611025/JobLog.sample2:pid-610535
2022-07-18T12:39:50: %GENIE-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:50: %GENIE-INFO: |                     Ending Device Image MD5 Hash Plugin                      |
2022-07-18T12:39:50: %GENIE-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:50: %CONTRIB-INFO: WebEx Token not given as argument or in config. No WebEx notification will be sent
2022-07-18T12:39:50: %EASYPY-INFO: --------------------------------------------------------------------------------
2022-07-18T12:39:50: %EASYPY-INFO: Job finished. Wrapping up...
2022-07-18T12:39:51: %EASYPY-INFO: Creating archive file: /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/archive/22-07/sample2.2022Jul18_12:37:19.611025.zip
2022-07-18T12:39:51: %EASYPY-INFO: Uploading logs to TRADe...
2022-07-18T12:39:52: %CISCO-INFO: Start Telemetry - Archive Log Upload
2022-07-18T12:39:53: %CISCO-INFO: Posted data to Kafka returning status code 200 within time 0:00:00.628973
2022-07-18T12:39:53: %EASYPY-INFO: Log Archive uploaded to: https://ngdevx.cisco.com/services/taas/results/c1e1ea1d-04fd-4c09-b4b6-2cddd71e48b4
2022-07-18T12:39:55: %EASYPY-INFO: TRADe upload completed.
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: |                                   TaaS URL                                   |
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: TaaS Log Viewer
2022-07-18T12:39:55: %EASYPY-INFO: -------------
2022-07-18T12:39:55: %EASYPY-INFO:     https://ngdevx.cisco.com/services/taas/results/c1e1ea1d-04fd-4c09-b4b6-2cddd71e48b4
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: |                                  TRADe URL                                   |
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: Result Viewer
2022-07-18T12:39:55: %EASYPY-INFO: -------------
2022-07-18T12:39:55: %EASYPY-INFO:     https://earms-trade.cisco.com/tradeui/logs/details?archive=/ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/archive/22-07/sample2.2022Jul18_12:37:19.611025.zip&atstype=ATS
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: |                                Easypy Report                                 |
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: pyATS Instance   : /ws/srmk-bgl/pyats/pyats_20_5
2022-07-18T12:39:55: %EASYPY-INFO: Python Version   : cpython-3.8.2 (64bit)
2022-07-18T12:39:55: %EASYPY-INFO: CLI Arguments    : /ws/srmk-bgl/pyats/pyats_20_5/bin/easypy sample2.job -testbed_file sample2.yaml
2022-07-18T12:39:55: %EASYPY-INFO: User             : gurpres5
2022-07-18T12:39:55: %EASYPY-INFO: Host Server      : bgl-ads-1947
2022-07-18T12:39:55: %EASYPY-INFO: Host OS Version  : Red Hat Enterprise Linux 8.5 Ootpa (x86_64)
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: Job Information
2022-07-18T12:39:55: %EASYPY-INFO:     Name         : sample2
2022-07-18T12:39:55: %EASYPY-INFO:     Start time   : 2022-07-18 12:37:23.651852+05:30
2022-07-18T12:39:55: %EASYPY-INFO:     Stop time    : 2022-07-18 12:37:45.080192+05:30
2022-07-18T12:39:55: %EASYPY-INFO:     Elapsed time : 21.42834
2022-07-18T12:39:55: %EASYPY-INFO:     Archive      : /ws/srmk-bgl/pyats/pyats_20_5/users/gurpres5/archive/22-07/sample2.2022Jul18_12:37:19.611025.zip
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: Total Tasks    : 1 
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: Overall Stats
2022-07-18T12:39:55: %EASYPY-INFO:     Passed     : 3
2022-07-18T12:39:55: %EASYPY-INFO:     Passx      : 0
2022-07-18T12:39:55: %EASYPY-INFO:     Failed     : 0
2022-07-18T12:39:55: %EASYPY-INFO:     Aborted    : 0
2022-07-18T12:39:55: %EASYPY-INFO:     Blocked    : 0
2022-07-18T12:39:55: %EASYPY-INFO:     Skipped    : 0
2022-07-18T12:39:55: %EASYPY-INFO:     Errored    : 0
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO:     TOTAL      : 3
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: Success Rate   : 100.00 %
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: |                             Task Result Summary                              |
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: Task-1: sample2.common_setup                                              PASSED
2022-07-18T12:39:55: %EASYPY-INFO: Task-1: sample2.TC1                                                       PASSED
2022-07-18T12:39:55: %EASYPY-INFO: Task-1: sample2.common_cleanup                                            PASSED
2022-07-18T12:39:55: %EASYPY-INFO: 
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: |                             Task Result Details                              |
2022-07-18T12:39:55: %EASYPY-INFO: +------------------------------------------------------------------------------+
2022-07-18T12:39:55: %EASYPY-INFO: Task-1: sample2
2022-07-18T12:39:55: %EASYPY-INFO: |-- common_setup                                                          PASSED
2022-07-18T12:39:55: %EASYPY-INFO: |   |-- connect                                                           PASSED
2022-07-18T12:39:55: %EASYPY-INFO: |   `-- verify_inputs                                                     PASSED
2022-07-18T12:39:55: %EASYPY-INFO: |-- TC1                                                                   PASSED
2022-07-18T12:39:55: %EASYPY-INFO: |   |-- tc1_setup                                                         PASSED
2022-07-18T12:39:55: %EASYPY-INFO: |   `-- tc1_step1                                                         PASSED
2022-07-18T12:39:55: %EASYPY-INFO: `-- common_cleanup                                                        PASSED
2022-07-18T12:39:55: %EASYPY-INFO: Sending report email...
2022-07-18T12:39:58: %EASYPY-INFO: Done!

Pro Tip
-------
   Try the following command to view your logs:
       pyats logs view

